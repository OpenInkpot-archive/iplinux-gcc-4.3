# -*- makefile -*-
# rules to patch the unpacked files in the source directory
# ---------------------------------------------------------------------------
# various rules to unpack addons and (un)apply patches.
# 	- patch / apply-patches
#	- unpatch / reverse-patches

.NOTPARALLEL:

patchdir	?= debian/patches

# which patches should be applied?

debian_patches = \
	svn-updates

#	pr30961: not yet applied \
#	boehm-gc-nocheck: seems to work on the buildds \
#	pr33148: not yet applied \

debian_patches += \
	pr30740 \
	gcc-nomultilibamd64 \
	gcc-textdomain \
	gcc-driver-extra-langs \
	gcc-hash-style-both \
	libstdc++-pic \
	libstdc++-doclink \
	libobjc-gc-link \
	libjava-stacktrace \
	libjava-subdir \
	libjava-jnipath \
	libjava-sjlj \
	libjava-rpath \
	libjava-file-support \
	libjava-soname \
	libjava-xulrunner1.9 \
	libjava-realloc-leak \
	libgcj-bc \
	pr28102 \
	alpha-no-ev4-directive \
	boehm-gc-getnprocs \
	note-gnu-stack \
	arm-unbreak-eabi-armv4t \
	libjava-armel-ldflags \
	libstdc++-symbols-hppa \
	pr10768 \
	pr15808 \
	pr15915 \
	pr16086 \
	pr16087 \
	pr16098 \
	pr17985 \
	pr18680 \
	pr22255 \
	pr22387 \
	pr24170 \
	pr28305 \
	pr28322 \
	pr28733 \
	pr29015 \
	pr30827 \
	pr33688 \
	pr34466 \
	pr35050 \
	pr35792 \
	gnalasup_to_lapack \
	gcc-m68k-pch \
	pr35020 \
	pr36343 \
	libjava-extra-cflags \
	pr35965 \
	m68k-allow-gnu99 \

ifeq ($(DEB_TARGET_ARCH),alpha)
  debian_patches += alpha-ieee mudflap-nocheck pr34571
  ifneq ($(GFDL_INVARIANT_FREE),yes)
    debian_patches += alpha-ieee-doc
  endif
endif

ifneq (,$(findstring $(DEB_TARGET_ARCH),arm armel))
  debian_patches += arm-funroll-loops libjava-armel-unwind
endif

ifeq ($(DEB_TARGET_ARCH),armel)
  debian_patches += libobjc-armel gfortran-armel-updates armel-hilo-union-class
endif

ifeq ($(DEB_TARGET_ARCH),ia64)
  debian_patches += pr27880
endif

ifeq ($(DEB_TARGET_ARCH),m68k)
  debian_patches +=
endif

ifeq ($(DEB_TARGET_ARCH_OS),kfreebsd)
  debian_patches += kbsd-gnu
  debian_patches += kbsd-gnu-ada
endif

  debian_patches += cross-include cross-fixes

#debian_patches += link-libs

# all patches below this line are applied for gcc-snapshot builds as well

ifneq ($(DEB_TARGET_ARCH),lpia)
  debian_patches += cpu-default-i486
endif

ifeq ($(PKGSOURCE),gcc-snapshot)
  debian_patches += gcc-ice-hack-trunk
else
  debian_patches += gcc-ice-hack
endif
debian_patches += libjava-disable-static
debian_patches += gcc-ice-apport

ifneq ($(DEB_TARGET_ARCH),sh4)
  ifeq ($(PKGSOURCE),gcc-snapshot)
    debian_patches += multiarch-include-trunk
  else
    debian_patches += multiarch-include
  endif
endif

firsthalf=true
patch-to-specific: $(foreach patch, $(debian_patches),$(if $(firsthalf),$(if $(findstring $(PATCH_TO),$(patch)),$(eval firsthalf=),$(patch_stamp)-$(patch)),))

patch: $(patch_stamp)
$(patch_stamp): $(unpack_stamp) $(foreach p,$(debian_patches),$(patch_stamp)-$(p))
	echo -e "\nPatches that $(distribution) applied in this version:" > pxxx
	for i in $(debian_patches); do \
	  echo -e "\n$$i:" >> pxxx; \
	  sed -n 's/^# *DP: */  /p' $(patchdir)/$$i.dpatch >> pxxx; \
	done
	-$(srcdir)/move-if-change pxxx $@

# currently empty target
pre-patch: $(pre_patch_stamp)
$(pre_patch_stamp):
	touch $@

unpatch:
	for stamp in none `ls -1t $(patch_stamp)-*`; do \
	  case "$$stamp" in none|patched-stamp|patched-\*) continue; esac; \
	  patch=`echo $$stamp | sed -e 's,$(patch_stamp)-,,'`; \
	  echo "trying to revert patch $$patch ..."; \
	  if sh -e $(patchdir)/$$patch.dpatch -unpatch -d $(srcdir); then \
	    echo "reverted $$patch patch."; \
	    rm -f $$stamp; \
	  else \
	    echo "error in reverting $$patch patch."; \
	    exit 1; \
	  fi; \
	done
	rm -f patched-stamp

# debian/rules.conf isn't yet sourced
SOURCE_VERSION := $(call vafilt,$(CHANGELOG_VARS),Version)

$(patch_stamp)-%: $(patchdir)/%.dpatch
	@if [ -f $@ ]; then \
	  echo "$* patches already applied."; exit 1; \
	fi
	sh -e $< -patch -d $(srcdir)
	@echo "$* patches applied." > $@
