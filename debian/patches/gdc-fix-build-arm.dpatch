#! /bin/sh -e

# gdc-fix-build-arm.dpatch by Iain Buclaw <ibuclaw@ubuntu.com>
# DP: Fix gdc build on armel, exclude C_TARGET_OBJS from borrowed objs.

dir=
if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
    dir="$3/"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch)
        patch $pdir -f --no-backup-if-mismatch -p0 < $0
        #cd ${dir}gcc && autoconf
        ;;
    -unpatch)
        patch $pdir -f --no-backup-if-mismatch -R -p0 < $0
        #rm ${dir}gcc/configure
        ;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1
esac
exit 0


--- gcc/d/d-gcc-includes.h	2010-03-20 13:01:54.000000000 +0000
+++ gcc/d/d-gcc-includes.h	2010-04-09 19:12:06.106850115 +0100
@@ -29,7 +29,11 @@
 
 // hack needed to prevent inclusion of the generated insn-flags.h
 // which defines some inline functions that use C prototypes....
+// because some archs depend on this header for EH routines,
+// only do this if EH_RETURN_HANDLER_RTX is already defined.
+#ifdef EH_RETURN_HANDLER_RTX
 #define GCC_INSN_FLAGS_H
+#endif
 
 // Conflicting definitions between stdio.h and libiberty.h over the throw()
 #define HAVE_DECL_ASPRINTF 1
--- gcc/d/Make-lang.in	2010-03-20 13:08:30.000000000 +0000
+++ gcc/d/Make-lang.in	2010-04-09 19:13:00.119848346 +0100
@@ -237,7 +237,7 @@
   else
    ifeq ($(D_gcc_main_ver),4.3)
     D_GLUE_OBJS += d/d-c-stubs.cglue.o
-    D_BORROWED_C_OBJS += stub-objc.o prefix.o $(C_TARGET_OBJS)
+    D_BORROWED_C_OBJS += stub-objc.o prefix.o
     D_EXTRA_LIBS += $(GMPLIBS)
     D_DRIVER_OBJS += opts-common.o gcc-options.o
    endif
