#!/bin/sh

if [ $# -ne 2 ]; then
    echo "Usage: debian/source/prepare <arch> <mode>"
    echo
    echo "  <mode> = bootstrap | final"
    exit 1
fi

TARGET=$1
MODE=$2

GNU_TARGET=$(dpkg-architecture -a${TARGET} -qDEB_HOST_GNU_TYPE)

if [ -z $GNU_TARGET ]; then
    echo "Target architecture ($TARGET) does not have associated GNU target"
    exit 1
fi

VERSION=4.3
CXX_SONAME=6
LIBGCC_SONAME=1

case $MODE in
    bootstrap)
        DEB_CROSS_BOOTSTRAP="DEB_CROSS_BOOTSTRAP := yes"
        GCC_PROVIDES=", gcc-bootstrap-toolchain-$TARGET-cross"
        ;;
    final)
        GCC_BUILD_DEPENDS=", libc6-dev-$TARGET-cross"
        GCC_PROVIDES=", gcc-toolchain-$TARGET-cross"
        ;;
    *)
        echo "Unknown mode: $MODE"
        exit 1
        ;;
esac

sed -e "s/__GCC_TARGET__/${TARGET}/g" \
    -e "s/__DEB_CROSS_BOOTSTRAP__/${DEB_CROSS_BOOTSTRAP}/g" \
    < debian/rules.params.in > debian/rules.params

sed -e "s/__VERSION__/${VERSION}/g" \
    -e "s/__TARGET__/${TARGET}/g" \
    -e "s/__GNU_TARGET__/${GNU_TARGET}/g" \
    -e "s/__CXX_SONAME__/${CXX_SONAME}/g" \
    -e "s/__LIBGCC_SONAME__/${LIBGCC_SONAME}/g" \
    -e "s/__GCC_PROVIDES__/${GCC_PROVIDES}/g" \
    -e "s/__GCC_BUILD_DEPENDS__/${GCC_BUILD_DEPENDS}/g" \
    < debian/control.in > debian/control

DIR=$(basename $(pwd))
(cd ..; dpkg-source -b "$DIR")

#rm debian/rules.params debian/control
